services:
  postgres:
    image: postgres:latest
    container_name: college-lms-postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
      - PGPORT=${DB_PORT}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    expose:
      - "${DB_PORT}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
  redis:
    image: redis:latest
    container_name: college-lms-redis
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - redis_data:/data
    environment:
      - REDIS_PORT=${REDIS_PORT}
  lms-api:
    build:
      context: .
      dockerfile: ./Dockerfile
    restart: unless-stopped
    container_name: college-lms-api
    ports:
      - "${APP_PORT}:${APP_PORT}"
    environment:
      APP_PORT: ${APP_PORT}
      AppOptions__SecretKey: ${SECRET_KEY}
      AppOptions__RedisConnection: college-lms-redis:${REDIS_PORT}
      AppOptions__DatabaseOptions__Host: college-lms-postgres
      AppOptions__DatabaseOptions__Port: ${DB_PORT}
      AppOptions__DatabaseOptions__Database: ${DB_NAME}
      AppOptions__DatabaseOptions__Username: ${DB_USER}
      AppOptions__DatabaseOptions__Password: ${DB_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - ./.env
    volumes:
      - ./logs:/app/logs

volumes:
  postgres_data:
  redis_data:
